# process
	total_run_times 0 #run conky forever
	background no #daemon

# position
	alignment top_left
	gap_x 70
	gap_y 60
	maximum_width 500
#	maximum_height 800

# engine
	double_buffer yes #reduces flicker
	text_buffer_size 256 #performance
	update_interval 1
	no_buffers yes #Subtract from used memory
	# imlib_cache_size 0 #Force images redraw on change.

# window manager
	own_window_class conky
	own_window_title cheetsheet

	own_window_transparent yes
	own_window_argb_visual yes # no for semi transpancy
	own_window_argb_value 128

	own_window yes #required in Desktop Environment
	own_window_type normal
	own_window_hints undecorated,below,sticky,skip_taskbar,skip_pager

# window
	draw_borders no
	border_width 1
	draw_graph_borders yes
	draw_outline no
	draw_shades yes
	border_inner_margin 10

#conky console
	out_to_console no
	out_to_stderr no
	out_to_ncurses no
	extra_newline no

#sample
	#cpu_avg_samples 2
	#net_avg_samples 2


#xft?
	use_xft yes
	xftfont sans:size=8
	override_utf8_locale yes
	xftalpha 0

# settings
	#use_spacer right
	#show_graph_scale no
	#show_graph_range no
	#pad_percents 0 #symbol spacing after numbers

# color
	default_color white
	default_shade_color black
	default_outline_color white


TEXT
${font Ubuntu:size=10} ${if_running emacs}M-x describe-bindings
repeat: C-u <times> char
cut[C-w], copy[M-w], paste[C-y]
${color green}ZZ ${color abcdef}Write current file, if modified, and exit.
${color green}ZQ ${color abcdef}Quit current file and exit (same as ":q!").
${color green}Ctrl-R [count] ${color abcdef}Redo [count] changes which were undone.
${color green}:red[o] ${color abcdef} Redo one change which was undone.
${color green}U ${color abcdef}Undo all latest changes on one line. {Vi: while not moved off of it}
${color green}. [count] ${color abcdef}Repeat last change, with count replaced with [count].
${hr}
${color green}gf ${color abcdef}Edit the file whose name is under or after the cursor. Mnemonic: "goto file".
${color green}I ${color abcdef}Insert text before the first non-blank in the line [count] times.
${color green}gI ${color abcdef}Insert text in column 1 [count] times.
${hr}
${color green}O ${color abcdef}Begin a new line above the cursor and insert text, repeat [count] times.
${color green}X ${color abcdef}Delete [count] characters before the cursor
${color green}d{motion} ${color abcdef} Delete text that {motion} moves over
${color green}D ${color abcdef}Delete the characters under the cursor until the end of the line
${hr}
${color green}{Visual}x or {Visual}d ${color abcdef}Delete the highlighted text
    (for {Visual} see Selecting Text).
${color green}{Visual}CTRL-H or {Visual} ${color abcdef}When in Select mode: Delete the highlighted text
${color green}{Visual}X or {Visual}D  ${color abcdef}Delete the highlighted lines
${hr}
${color green}:[range]d[elete] ${color abcdef}Delete [range] lines (default: current line)
${color green}:[range]d[elete] {count}  ${color abcdef}Delete {count} lines, starting with [range]
${hr}
${color green}0 ${color abcdef}To the first character of the line (exclusive).
${color green}^ ${color abcdef}To the first non-blank character of the line
${color green}$ ${color abcdef}To the end of the line and [count - 1] lines downward
${color green}g0 or g<Home> ${color abcdef}When lines wrap ('wrap on): To the first character of the screen line (exclusive).
${hr}
Differs from "0" when a line is wider than the screen. When lines don't wrap
('wrap' off): To the leftmost character of the current line that is on the screen.
Differs from "0" when the first character of the line is not on the screen.
${hr}
${color green}:e[dit] ${color abcdef}Edit the current file. This is useful to re-edit the current file,
   when it has been changed outside of Vim.
${hr}
${color green}:e[dit] ${color abcdef} Edit the current file. 
${color green}:e[dit]! ${color abcdef} Edit the current file always. Discard any changes to the current buffer
   This is useful if you want to start all over again
${hr}
${color green}:e[dit] ${color abcdef} Edit the current file. 
${color green}:e[dit] {file} ${color abcdef} Edit {file}
${color green}:e[dit]! {file} ${color abcdef} Edit {file} always. Discard any changes to the current buffer
${hr}
${endif}
${if_running kate} VI MODE
${color green}ZZ ${color abcdef}Write current file, if modified, and exit.
${color green}ZQ ${color abcdef}Quit current file and exit (same as ":q!").
${color green}Ctrl-R [count] ${color abcdef}Redo [count] changes which were undone.
${color green}:red[o] ${color abcdef} Redo one change which was undone.
${color green}U ${color abcdef}Undo all latest changes on one line. {Vi: while not moved off of it}
${color green}. [count] ${color abcdef}Repeat last change, with count replaced with [count].
${hr}
${color green}gf ${color abcdef}Edit the file whose name is under or after the cursor. Mnemonic: "goto file".
${color green}I ${color abcdef}Insert text before the first non-blank in the line [count] times.
${color green}gI ${color abcdef}Insert text in column 1 [count] times.
${hr}
${color green}O ${color abcdef}Begin a new line above the cursor and insert text, repeat [count] times.
${color green}X ${color abcdef}Delete [count] characters before the cursor
${color green}d{motion} ${color abcdef} Delete text that {motion} moves over
${color green}D ${color abcdef}Delete the characters under the cursor until the end of the line
${hr}
${color green}{Visual}x or {Visual}d ${color abcdef}Delete the highlighted text
    (for {Visual} see Selecting Text).
${color green}{Visual}CTRL-H or {Visual} ${color abcdef}When in Select mode: Delete the highlighted text
${color green}{Visual}X or {Visual}D  ${color abcdef}Delete the highlighted lines
${hr}
${color green}:[range]d[elete] ${color abcdef}Delete [range] lines (default: current line)
${color green}:[range]d[elete] {count}  ${color abcdef}Delete {count} lines, starting with [range]
${hr}
${color green}0 ${color abcdef}To the first character of the line (exclusive).
${color green}^ ${color abcdef}To the first non-blank character of the line
${color green}$ ${color abcdef}To the end of the line and [count - 1] lines downward
${color green}g0 or g<Home> ${color abcdef}When lines wrap ('wrap on): To the first character of the screen line (exclusive).
${hr}
Differs from "0" when a line is wider than the screen. When lines don't wrap
('wrap' off): To the leftmost character of the current line that is on the screen.
Differs from "0" when the first character of the line is not on the screen.
${hr}
${color green}:e[dit] ${color abcdef}Edit the current file. This is useful to re-edit the current file,
   when it has been changed outside of Vim.
${hr}
${color green}:e[dit] ${color abcdef} Edit the current file. 
${color green}:e[dit]! ${color abcdef} Edit the current file always. Discard any changes to the current buffer
   This is useful if you want to start all over again
${hr}
${color green}:e[dit] ${color abcdef} Edit the current file. 
${color green}:e[dit] {file} ${color abcdef} Edit {file}
${color green}:e[dit]! {file} ${color abcdef} Edit {file} always. Discard any changes to the current buffer
${hr}
${endif}
${if_running gnome-terminal-}
shell - setsid
${hr 2}
$$$$ Current Process ID
$$? Exit status
$$! PID bgprocess
$$- Options given to the shell.
!$$ last argument
find <pattern> -exec <command> {} \;
${endif}